#include <iostream>
#include <string>

using namespace std;

class Entity {
protected:
    string name; 
    int health;  

public:
    Entity(const string& n, int h) : name(n), health(h) {}

    virtual void displayInfo() const {
        cout << "Name: " << name << ", HP: " << health << endl;
    }

    virtual ~Entity() {}
};

class Player : public Entity {
private:
    int experience; 

public:

    Player(const string& n, int h, int exp)
        : Entity(n, h), experience(exp) {
    }

    void displayInfo() const override {
        Entity::displayInfo(); 
        cout << "Experience: " << experience << endl;
    }
};

class Enemy : public Entity {
private:
    string type; 

public:

    Enemy(const string& n, int h, const string& t)
        : Entity(n, h), type(t) {
    }

    void displayInfo() const override {
        Entity::displayInfo(); 
        cout << "Type: " << type << endl;
    }
};

class Boss : public Enemy {
private:
    string specialAbility; 

public:

    Boss(const string& n, int h, const string& t, const string& ability)
        : Enemy(n, h, t), specialAbility(ability) {}


    void displayInfo() const override {
        Enemy::displayInfo(); 
        cout << "Special Ability: " << specialAbility << endl;
    }
};

int main() {

    Player hero("Hero", 100, 0);
    Enemy monster("Goblin", 50, "Goblin");
    Boss FinalBoss("Mortis", 100, "Necromancer", "Rise of the undead");


    hero.displayInfo();
    monster.displayInfo();
    FinalBoss.displayInfo();

    return 0;
}
